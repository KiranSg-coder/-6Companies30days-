Link : https://leetcode.com/problems/number-of-people-aware-of-a-secret/submissions/

class Solution {
    public int peopleAwareOfSecret(int n, int delay, int forget) {
        int mod = 1000000007;
        long[] people = new long[n + 1];
        people[1] = 1;
        long total = 0;
        for(int i = 1; i <= n; i++) {
            if(people[i] > 0) {
                for(int j = delay; j < forget && i + j <=n; j++) {
				   //all people who will know the secret at day i will share it to 1 person each on each day from delay until they forget
                    people[i + j] = (people[i + j] + people[i]) % mod;
                }
            }
            
        }
        
        
        
        for(int i = 1; i <=n; i++) {
		//people who will remember at day n are those whose forget day is after day n
            if(people[i] > 0 && i + forget > n)
                total= (total + people[i]) % mod;
        }
        
        return (int)total;
        
        
    }
}

TC - O(n^2) 
Space - O(n)
